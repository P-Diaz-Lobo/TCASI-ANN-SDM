% Validation ANN multiclas for a 2nd-ord  Gm SDM
% P. Diaz April 19,2023 

clear;clc;close all;
tStart = cputime;
classifier_model = 'GB';

data_path = [cd,'\VAL-DS\Multiple-Iterations-C\classifier',classifier_model,'_2orGmSDM_val_'];
% Load model
SDMmodel = 'GmC2ndCTSDMParam';
load_system(SDMmodel);
variables_filePath = '2ndGmSDM_Variables.mat';
table = importfile_SC([data_path,num2str(1),'.csv']);
[rows,~]=size(table);
SDin(1:rows) = Simulink.SimulationInput(SDMmodel);

SNR_asked = table.SNR;
power_asked = table.Power;

num_iterations = 10;
SNR_sim = zeros(rows,num_iterations);
power_sim = SNR_sim;
fom_sim = SNR_sim;

% Load parameters
load("2ndGmSDM_Variables.mat")

fom_asked = SNR_asked+10*log10(fs./(2*(table.OSR).*power_asked));
%%
for i = 1:num_iterations
    % Read data
    table = importfile_SC([data_path,num2str(i),'.csv']);
    [rows,~]=size(table);
      
    Adc11 = table.Adc1_gm;
    R11=Adc11/gm11;

    Adc12 = table.Adc2_gm;
    R12=Adc12/gm12;

    GBW1 = table.GBW1; 
    Cp1=gm11./(2*pi*GBW1);

    GBW2 = table.GBW2;
    Cp2=gm12./(2*pi*GBW2);

    IIP3_in = table.IIP3_Int1;
    IIP3_12 = table.IIP3_Int2;
    IIP3_FF = table.IIP_FF;

    OSR = table.OSR;
    M = OSR;
    BW=fs./(2*M);
    % prepare simulation input
    for n = 1:rows  
          
        
        % Simulation input
        SDin(n) = SDin(n).setVariable('M', M(n)); 
        SDin(n) = SDin(n).setVariable('BW', BW(n));
        SDin(n) = SDin(n).setVariable('OSR', OSR(n)); 
        SDin(n) = SDin(n).setVariable('Cp1', Cp1(n)); 
        SDin(n) = SDin(n).setVariable('Cp2', Cp2(n)); 
        SDin(n) = SDin(n).setVariable('Adc11', Adc11(n));
        SDin(n) = SDin(n).setVariable('Adc12', Adc12(n));
        SDin(n) = SDin(n).setVariable('R11', R11(n));
        SDin(n) = SDin(n).setVariable('R12', R12(n));
        SDin(n) = SDin(n).setVariable('IIP3_in', IIP3_in(n));
        SDin(n) = SDin(n).setVariable('IIP3_12', IIP3_12(n));
        SDin(n) = SDin(n).setVariable('IIP3_a', IIP3_FF(n));
        SDin(n) = SDin(n).setVariable('IIP3_b', IIP3_FF(n));
        SDin(n) = SDin(n).setVariable('IIP3_c', IIP3_FF(n));
                    
    end   

    
    % 
    % Run parallel simulations
    tStart2 = cputime;
    fprintf('Running parallel simulations')
    SDout=parsim(SDin,'ShowProgress','on','TransferBaseWorkspaceVariables','off',...
        'AttachedFiles',variables_filePath,...
        'SetupFcn',@()evalin('base','load 2ndGMSDM_Variables.mat')); 
    disp(cputime - tStart2)
    fprintf('Saving Data ...')
    
    SNR_sim(:,i) = reshape(arrayfun(@(obj,bw) try_snr(obj,bw,N,fs,fin), SDout,BW'),[],1);
    power_sim(:,i) = 1e-12*(GBW1+GBW2);
    fom_sim(:,i) = SNR_sim(:,i)+10*log10(BW./power_sim(:,i));
end
%%

save(['VAL-DS/sim_2orGM_OPT',classifier_model,'_',num2str(num_iterations),'.mat'],"SNR_asked","SNR_sim","power_sim","power_asked","fom_sim","fom_asked")
%%

function SNR = try_snr(obj,bandwith,N,fs,fin)
    if isempty(obj.ErrorMessage)
        out=obj.out;
        SNR = fsnr(out,1,N,fs,fin,bandwith,30,30,1,1,1);
    else
        SNR = 0;
    end


end

function SCANN2orGmSDMval1 = importfile_SC(filename, dataLines)
%IMPORTFILE Import data from a text file
%  SCANN2ORGMSDMVAL1 = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  SCANN2ORGMSDMVAL1 = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  SCANN2orGmSDMval1 = importfile("C:\Users\Jose\Desktop\Pablo\AIHub\VALIDATION\VAL-DS\Multiple-Iterations-SC\SCANN_2orGmSDM_val_1.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 28-Jun-2023 22:46:09

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 10);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["SNR", "OSR", "Power", "Adc1_gm", "GBW1", "IIP3_Int1", "Adc2_gm", "GBW2", "IIP3_Int2", "IIP_FF"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
SCANN2orGmSDMval1 = readtable(filename, opts);

end


