%%
clear;clc;close all;
tStart = cputime;
classifier_model = 'GB';
% data_path = [cd,'\VAL-DS\Multiple-IteratIons-SC\SCANN_211CascadeSDM_val_']; % Single Class
data_path = [cd,'\VAL-DS\Multiple-IteratIons-C\Classifier',classifier_model,'_211CascadeSDM_val_']; % Classifier
% Load model
SDMmodel = 'umts211_real';
load_system(SDMmodel);
variables_filePath = '211CascadeSDM_Variables.mat';
table = importfile_SC([data_path,num2str(1),'.csv']);

[rows,~]=size(table);
SDin(1:rows) = Simulink.SimulationInput(SDMmodel);

Bw=4e6;
fin=Bw/3;

SNR_asked = table.SNR;
power_asked = table.Power;
fom_asked = SNR_asked+10*log10(Bw./power_asked);

num_iterations = 10;
SNR_sim = zeros(rows,num_iterations);
power_sim = SNR_sim;
%%
for i = 1:num_iterations
    % Read data
    table = importfile_SC([data_path,num2str(i),'.csv']);
    [rows,~]=size(table);
    Adc1 = table.Adc1;
    gm1 = table.gm1;
    Io1 = table.Io1;

    Adc2 = table.Adc2;
    gm2 = table.gm2;
    Io2 = table.Io2; 

    Adc3 = table.Adc3;
    gm3 = table.gm3;
    Io3 = table.Io3;

    Adc4 = table.Adc4;
    gm4 = table.gm4;
    Io4 = table.Io4; 
    
    
    OSR = table.OSR;
    % prepare simulation input
    for n = 1:rows  
          
        M=OSR(n);
        fs=2*M*Bw;
        ts=1/fs; 


        SDin(n) = SDin(n).setVariable('ts', ts);
        SDin(n) = SDin(n).setVariable('fs', fs);
        
        
        SDin(n) = SDin(n).setVariable('OSR', OSR(n));

        SDin(n) = SDin(n).setVariable('Adc1',Adc1(n));
        SDin(n) = SDin(n).setVariable('gm1', gm1(n));
        SDin(n) = SDin(n).setVariable('Io1',Io1(n));

        SDin(n) = SDin(n).setVariable('Adc2',Adc2(n));
        SDin(n) = SDin(n).setVariable('gm2',gm2(n));
        SDin(n) = SDin(n).setVariable('Io2', Io2(n));

        SDin(n) = SDin(n).setVariable('Adc3',Adc3(n));
        SDin(n) = SDin(n).setVariable('gm3', gm3(n));
        SDin(n) = SDin(n).setVariable('Io3',Io3(n) );

        SDin(n) = SDin(n).setVariable('Adc4',Adc4(n));
        SDin(n) = SDin(n).setVariable('gm4', gm4(n));
        SDin(n) = SDin(n).setVariable('Io4', Io4(n));

                    
    end   

    % 
    % Run parallel simulations
    tStart2 = cputime;
    fprintf('Running parallel simulations')
    SDout=parsim(SDin,'ShowProgress','on','TransferBaseWorkspaceVariables','off',...
        'AttachedFiles',variables_filePath,...
        'SetupFcn',@()evalin('base','load 211CascadeSDM_Variables.mat')); 
    disp(cputime - tStart2)
    fprintf('Saving Data ...')
    
    SNR_sim(:,i) = reshape(arrayfun(@(obj) obj.SNRArray1, SDout),[],1);
    power_sim(:,i) = Io1+Io2+Io3+Io4;
    
end
fom_sim = SNR_sim+10*log10(Bw./power_sim);
%%
save(['VAL-DS/sim_211Cascade_SingleClassGB_',num2str(num_iterations),'.mat'],"SNR_asked","SNR_sim","power_sim","power_asked","fom_sim","fom_asked")

%%
function classifierGB211CascadeSDMval6 = importfile_SC(filename, dataLines)
%IMPORTFILE Import data from a text file
%  CLASSIFIERGB211CASCADESDMVAL6 = IMPORTFILE(FILENAME) reads data from
%  text file FILENAME for the default selection.  Returns the data as a
%  table.
%
%  CLASSIFIERGB211CASCADESDMVAL6 = IMPORTFILE(FILE, DATALINES) reads
%  data for the specified row interval(s) of text file FILENAME. Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  classifierGB211CascadeSDMval6 = importfile("C:\Users\Jose\Desktop\Pablo\AIHub\VALIDATION\VAL-DS\Multiple-Iterations-C\classifierGB_211CascadeSDM_val_6.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 27-Jul-2023 14:25:20

% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 15);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["SNR", "OSR", "Power", "Adc1", "gm1", "Io1", "Adc2", "gm2", "Io2", "Adc3", "gm3", "Io3", "Adc4", "gm4", "Io4"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
classifierGB211CascadeSDMval6 = readtable(filename, opts);

end



